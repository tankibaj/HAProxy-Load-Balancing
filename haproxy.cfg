#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   https://www.haproxy.org/download/2.3/doc/configuration.txt
#   https://cbonte.github.io/haproxy-dconv/2.3/configuration.html
#
#---------------------------------------------------------------------


#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
   log 127.0.0.1 local2


#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
   mode http
   log global
   retries 3
   timeout http-request 10s
   timeout queue 1m
   timeout connect 10s
   timeout client 1m
   timeout server 3m
   timeout http-keep-alive 10s
   timeout check 10s
   maxconn 3000


#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend public
   bind *:80
   bind *:443 ssl crt /usr/local/etc/haproxy/certs/test.pem alpn h2,http/1.1
   acl dog path_end -i /dog
   acl cat path_end -i /cat
   acl bird path_end -i /bird
   # http-request deny if { path -i -m beg /admin }
   # acl url_static path_beg -i /static /images /javascript /stylesheets
   # acl url_static path_end -i .jpg .gif .png .css .js
   use_backend nodeGroupDog if dog
   use_backend nodeGroupCat if cat
   use_backend nodeGroupBird if bird
   # use_backend static if url_static
   default_backend nodeGroupHome
   # errorfiles MyCustomErrors
   # http-response return status 404 default-errorfiles if { status 404 }


#---------------------------------------------------------------------
# round robin balancing between the various backends for home
#---------------------------------------------------------------------
backend nodeGroupHome
   balance roundrobin
   server app1 ${NODE1_IP}:${NODE_PORT} check
   server app2 ${NODE2_IP}:${NODE_PORT} check


#---------------------------------------------------------------------
# round robin balancing between the various backends for /dog
#---------------------------------------------------------------------
backend nodeGroupDog
   balance roundrobin
   server app3 ${NODE3_IP}:${NODE_PORT} check
   server app4 ${NODE4_IP}:${NODE_PORT} check


#---------------------------------------------------------------------
# round robin balancing between the various backends for /cat
#---------------------------------------------------------------------
backend nodeGroupCat
   balance roundrobin
   server app5 ${NODE5_IP}:${NODE_PORT} check
   server app6 ${NODE6_IP}:${NODE_PORT} check


#---------------------------------------------------------------------
# round robin balancing between the various backends for /bird
#---------------------------------------------------------------------
backend nodeGroupBird
   balance roundrobin
   server app5 ${NODE7_IP}:${NODE_PORT} check
   server app6 ${NODE8_IP}:${NODE_PORT} check


#---------------------------------------------------------------------
# static backend for serving up images, stylesheets and such
#---------------------------------------------------------------------
# backend static
#    balance roundrobin
#    server static1 ${NODE9_IP}:${NODE_PORT} check
#    server static2 ${NODE10_IP}:${NODE_PORT} check

#---------------------------------------------------------------------
# round robin balancing between the various backends for home page
#---------------------------------------------------------------------
# backend allnodes
#    balance roundrobin
#    server app1 ${NODE1_IP}:${NODE_PORT} check
#    server app2 ${NODE2_IP}:${NODE_PORT} check
#    server app3 ${NODE3_IP}:${NODE_PORT} check
#    server app4 ${NODE4_IP}:${NODE_PORT} check
#    server app5 ${NODE5_IP}:${NODE_PORT} check
#    server app6 ${NODE6_IP}:${NODE_PORT} check


# http-errors MyCustomErrors
#     errorfile 404 /etc/haproxy/errors/404.http

